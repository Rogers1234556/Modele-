/* –î–∞–Ω–Ω—ã–µ */
const data = [
  { title: "Polices Helper", desc: "–ò–≥—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ú–í–î / –§–°–ë", price: "250‚≠êÔ∏è", img: "img/logo.jpeg", thumb: "img/logo.jpeg" },
  { title: "Leaders Helper", desc: "–ò–≥—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ª–∏–¥–µ—Ä–æ–≤", price: "250‚≠êÔ∏è", img: "img/logo.jpeg", thumb: "img/logo.jpeg" },
  { title: "RADMIR Helper", desc: "–ò–≥—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫", price: "250‚≠êÔ∏è", img: "img/logo.jpeg", thumb: "img/logo.jpeg" }
];

const slidesEl = document.getElementById('slides');
const thumbsEl = document.getElementById('thumbs');
const dotsEl = document.getElementById('dots');
let current = 0;

/* –†–µ–Ω–¥–µ—Ä */
function render(){
  slidesEl.innerHTML = '';
  thumbsEl.innerHTML = '';
  dotsEl.innerHTML = '';
  data.forEach((it,i)=>{
    const s = document.createElement('div');
    s.className = 'slide' + (i===0?' active':'');
    s.innerHTML = `
      <article class="card">
        <div class="bg" style="background-image:url('${it.img}')"></div>
        <div class="overlay"></div>
        <div class="content">
          <div class="title">${it.title}</div>
          <div class="desc">${it.desc}</div>
          <div class="bottom">
            <div class="price">${it.price}</div>
            <button class="btn-order">–ö–£–ü–ò–¢–¨</button>
          </div>
        </div>
      </article>`;
    slidesEl.appendChild(s);

    const t = document.createElement('div');
    t.className = 'thumb' + (i===0?' active':'');
    t.dataset.index = i;
    t.innerHTML = `<div class="thumb-img" style="background-image:url('${it.thumb}')"></div>
                   <div class="t-title">${it.title}</div>
                   <div class="t-price">${it.price}</div>`;
    thumbsEl.appendChild(t);

    const d = document.createElement('div');
    d.className = 'dot' + (i===0?' active':'');
    d.dataset.index = i;
    dotsEl.appendChild(d);
  });
  attachEvents();
}

/* –ü–æ–∫–∞–∑ —Å–ª–∞–π–¥–∞ */
function show(index){
  if(index<0) index=data.length-1;
  if(index>=data.length) index=0;
  current=index;
  slidesEl.querySelectorAll('.slide').forEach((s,i)=> s.classList.toggle('active',i===index));
  thumbsEl.querySelectorAll('.thumb').forEach((t,i)=> t.classList.toggle('active',i===index));
  dotsEl.querySelectorAll('.dot').forEach((d,i)=> d.classList.toggle('active',i===index));
}

/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */
function attachEvents(){
  thumbsEl.querySelectorAll('.thumb').forEach(t=>{
    t.onclick=()=>show(+t.dataset.index);
  });
  dotsEl.querySelectorAll('.dot').forEach(d=>{
    d.onclick=()=>show(+d.dataset.index);
  });
}
render();

/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ */
/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ) */
document.querySelector(".bottom-nav").addEventListener("click", (e) => {
  const item = e.target.closest(".nav-item");
  if (!item) return;

  document.querySelectorAll(".nav-item").forEach(i => i.classList.remove("active"));
  document.querySelectorAll(".section").forEach(s => s.classList.remove("active"));

  item.classList.add("active");
  document.getElementById(item.dataset.section).classList.add("active");
});

/* –ü—Ä–æ–º–æ–∫–æ–¥ */
const createBtn = document.getElementById("createPromoBtn");
const promoInputBox = document.getElementById("promoInputBox");
const promoText = document.getElementById("promoText");
const promoResultBox = document.getElementById("promoResultBox");
const promoResultText = document.getElementById("promoResultText");
// –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–º–æ-–±–ª–æ–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
promoInputBox.style.display = "none";
promoResultBox.style.display = "none";

createBtn.onclick = ()=>{
  createBtn.style.display="none";
  promoInputBox.style.display="flex";
};
promoInputBox.querySelector(".confirm").onclick=()=>{
  if(promoText.value.trim()!==""){
    promoInputBox.style.display="none";
    promoResultBox.style.display="flex";
    promoResultText.textContent=promoText.value.trim();
  }
};
promoInputBox.querySelector(".cancel").onclick=()=>{
  promoInputBox.style.display="none";
  createBtn.style.display="block";
};
promoResultBox.querySelector(".cancel").onclick=()=>{
  promoResultBox.style.display="none";
  createBtn.style.display="block";
  promoText.value="";
};

// –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
document.addEventListener("DOMContentLoaded", () => {
  const supportBtn = document.querySelector(".btn-support");
  if (supportBtn) {
    supportBtn.addEventListener("click", () => {
      window.location.href = "https://t.me/your_support_chat"; // —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞
    });
  }

  const promoBtn = document.querySelector(".btn-main");
  if (promoBtn) {
    promoBtn.addEventListener("click", () => {
      // —Ç—É—Ç –º–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â—ë
      alert("–û–∫–Ω–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ üôÇ");
    });
  }
});

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á—ë—Ç–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–Ω–µ–π
function getDaysLeft(startDate, totalDays) {
  const start = new Date(startDate);
  const end = new Date(start);
  end.setDate(start.getDate() + totalDays); // –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
  const today = new Date();

  const diff = Math.ceil((end - today) / (1000 * 60 * 60 * 24));
  return diff > 0 ? diff : 0; // –µ—Å–ª–∏ —É–∂–µ –∏—Å—Ç–µ–∫–ª–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0
}



// id —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ Telegram WebApp)
const currentUserId = window.currentUserId;
//const BIN_URL_A = process.env.BIN_URL_A;
const BIN_URL = process.env.BIN_URL;
const API_KEY = process.env.API_KEY;
const BIN_URL_A = process.env.BIN_URL_A; // "https://api.jsonbin.io/v3/b/68910385f7e7a370d1f3c199/latest";

// —Ç–≤–æ–π bin URL (–ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –æ–Ω –ø—É–±–ª–∏—á–Ω—ã–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π API-–∫–ª—é—á)
//const BIN_URL = "https://api.jsonbin.io/v3/b/68a9a92043b1c97be9266774/latest";
//const API_KEY = "$2a$10$Dz1aHgMBI1fp1vjHgzv4KuScT5dgtyLfpRCxBszMOg6Zv/xOdJ0K6"; // –µ—Å–ª–∏ bin –ø—Ä–∏–≤–∞—Ç–Ω—ã–π

fetch(BIN_URL, {
  headers: {
    "X-Master-Key": API_KEY // —É–±–µ—Ä–∏ —ç—Ç—É —Å—Ç—Ä–æ—á–∫—É, –µ—Å–ª–∏ bin –ø—É–±–ª–∏—á–Ω—ã–π
  }
})
  .then(res => res.json())
  .then(data => {
    const users = data.record.users;
    window.allUsers = users;// –≤ jsonbin –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ `record`
    const user = users.find(u => u.id === currentUserId);

    if (user) {
      // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∫–ª—é—á
      // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∫–ª—é—á —Å –∏–∫–æ–Ω–∫–æ–π –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
      document.querySelector(".menu-item .fa-key").parentNode.innerHTML = `
        <span class="fa-solid fa-key"></span> 
        –ö–ª—é—á: <span id="userKey">${user.key}</span>
        <i id="copyKeyBtn" class="fa-solid fa-copy" style="cursor:pointer; margin-left:8px;"></i>
      `;

      // –°—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å
      const buy1Left = getDaysLeft(user.buy1.start, user.buy1.days);
      const buy2Left = getDaysLeft(user.buy2.start, user.buy2.days);

      // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
      document.querySelector(".fa-basket-shopping").parentNode.innerHTML =
        `<span class="fa-solid fa-basket-shopping"></span> –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:<br>
         Polices Helper: ${buy1Left} –¥–Ω<br>
         Leaders Helper: ${buy2Left} –¥–Ω`;
    } else {
      console.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
  })
  .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON:", err));



// 2. –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–¥–º–∏–Ω–æ–≤
fetch(BIN_URL_A, {
  headers: { "X-Master-Key": API_KEY }
})
  .then(res => res.json())
  .then(data => {
    const admins = data.record.admins;
    const admin = admins.find(a => a.id === currentUserId);
    window.currentAdmin = admin;

    if (admin && admin.level >= 3) {
      const bottomNav = document.querySelector(".bottom-nav");

      if (!document.querySelector(".nav-item[data-section='admin']")) {
        const adminTab = document.createElement("div");
        adminTab.className = "nav-item";
        adminTab.dataset.section = "admin";
        adminTab.innerHTML = `
          <i class="fa-solid fa-lock nav-icon"></i>
          <div class="nav-label">ADM</div>
        `;
        bottomNav.appendChild(adminTab);

        const adminSection = document.createElement("div");
        adminSection.id = "admin";
        adminSection.className = "section";
        adminSection.innerHTML = `
          <div class="admin-panel">
            <h2>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h2>
            <div class="admin-menu">
              <button class="admin-tab active" data-tab="users">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</button>
              <button class="admin-tab" data-tab="buyers">–ü–æ–∫—É–ø–∞—Ç–µ–ª–∏</button>
              <button class="admin-tab" data-tab="bans">–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏</button>
              <button class="admin-tab" data-tab="logs">–õ–æ–≥–∏</button>
            </div>
            <div id="adminContent" class="admin-content"></div>
          </div>
          
        `;
        bottomNav.insertAdjacentElement("beforebegin", adminSection);

        // –≤—Å—Ç–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é –ø–µ—Ä–µ–¥ .bottom-nav
        bottomNav.insertAdjacentElement("beforebegin", adminSection);
      }
    }
  })
  .catch(err => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ADMINS JSON:", err));


// 3. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞
document.addEventListener("click", (e) => {
  if (e.target && e.target.id === "copyKeyBtn") {
    const keyText = document.getElementById("userKey").textContent;
    navigator.clipboard.writeText(keyText).then(() => {
      e.target.classList.remove("fa-copy");
      e.target.classList.add("fa-check");
      setTimeout(() => {
        e.target.classList.remove("fa-check");
        e.target.classList.add("fa-copy");
      }, 1500);
    }).catch(err => console.error("–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:", err));
  }
});

function renderUsersList(users) {
  if (!users || users.length === 0) {
    return "<h3>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3><p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç.</p>";
  }

  let html = `<h3>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
    <div class="search-bar">
      <input type="text" id="searchInput" placeholder="–ü–æ–∏—Å–∫..." 
        style="width:40%; padding:5px 8px; font-size:13px; border-radius:4px; 
        border:1px solid #444; background:#2b2b2b; color:#fff; outline:none;">
    </div>
  `;

  users.forEach((u, index) => {
    const buy1Left = getDaysLeft(u.buy1.start, u.buy1.days);
    const buy2Left = getDaysLeft(u.buy2.start, u.buy2.days);

    html += `
      <div class="user-card">
        <div class="user-header">
          ${index + 1} - @${u.login || "–Ω–µ—Ç"}
          <i class="fa-solid fa-cog user-settings" data-id="${u.id}" style="float:right; cursor:pointer;"></i>
        </div>
        <div class="user-info">
          <p><strong>ID:</strong> ${u.id}</p>
          <p><strong>–ö–ª—é—á:</strong> <span class="user-key">${u.key}</span>
             </p>
          <p><strong><span class="fa-solid fa-basket-shopping"></span> Police Helper:</strong> ${buy1Left} –¥–Ω–µ–π</p>
          <p><strong><span class="fa-solid fa-basket-shopping"></span> Leader Helper:</strong> ${buy2Left} –¥–Ω–µ–π</p>
        </div>
      </div>
    `;
  });

  return html;
}

document.addEventListener("click", (e) => {
  if (e.target.classList.contains("admin-tab")) {
    document.querySelectorAll(".admin-tab").forEach(btn => btn.classList.remove("active"));
    e.target.classList.add("active");

    const tab = e.target.dataset.tab;
    const content = document.getElementById("adminContent");

    

    if (tab === "users") {
      content.innerHTML = renderUsersList(window.allUsers || []);

      const search = document.getElementById("searchInput");
      search.addEventListener("input", () => {
        const query = search.value.trim().toLowerCase();
        const filtered = (window.allUsers || []).filter(u => 
          u.id.toString().includes(query) || 
          (u.login && u.login.toLowerCase().includes(query))
        );
        content.innerHTML = renderUsersList(filtered);
        document.getElementById("searchInput").value = query;
      });

    } else if (tab === "buyers") {
      content.innerHTML = renderBuyersList(window.allUsers || []);

      const search = document.getElementById("searchInput");
      search.addEventListener("input", () => {
        const query = search.value.trim().toLowerCase();
        const filtered = (window.allUsers || []).filter(u => 
          (u.buy1?.days > 0 || u.buy2?.days > 0) &&
          (
            u.id.toString().includes(query) || 
            (u.login && u.login.toLowerCase().includes(query))
          )
        );
        content.innerHTML = renderBuyersList(filtered);
        document.getElementById("searchInput").value = query;
      });

    } else if (tab === "bans") {
      content.innerHTML = renderBansList(window.allUsers || []);

      const search = document.getElementById("searchInput");
      search.addEventListener("input", () => {
        const query = search.value.trim().toLowerCase();
        const filtered = (window.allUsers || []).filter(u => 
          u.ban?.status === true &&
          (
            u.id.toString().includes(query) || 
            (u.login && u.login.toLowerCase().includes(query))
          )
        );
        content.innerHTML = renderBansList(filtered);
        document.getElementById("searchInput").value = query;
      });

    } else if (tab === "logs") {
      content.innerHTML = "<h3>–ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ–≤...</h3>";

      loadLogsFromBin().then(logs => {
        content.innerHTML = renderLogs(logs);

        const search = document.getElementById("searchInput");
        search.addEventListener("input", () => {
          const query = search.value.trim().toLowerCase();
          const filtered = (logs || []).filter(log => 
            log.admin.toLowerCase().includes(query) ||
            log.action.toLowerCase().includes(query) ||
            log.time.toLowerCase().includes(query)
          );
          content.innerHTML = renderLogs(filtered);
          document.getElementById("searchInput").value = query;
        });
      });
    }
  }
});

let selectedUserId = null;
let selectedSection = null;

const modal = document.getElementById("modal");
const modalTitle = document.getElementById("modalTitle");
const modalBody = document.getElementById("modalBody");

// —Ä–µ–Ω–¥–µ—Ä –∫–Ω–æ–ø–æ–∫ –≤ –º–æ–¥–∞–ª–∫–µ
function renderModalButtons(section) {
  modalBody.innerHTML = "";

  if (section === "users") {
    modalBody.innerHTML = `
      <button class="modal-btn" id="giveDaysBtn"><span class="fa-solid fa-plus"></span> –í—ã–¥–∞—Ç—å –¥–Ω–∏</button>
      <button class="modal-btn" id="removeDaysBtn"><span class="fa-solid fa-minus"></span> –£–±—Ä–∞—Ç—å –¥–Ω–∏</button>
      <button class="modal-btn" id="copyIdBtn"><span class="fa-solid fa-clone"></span> –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ID</button>
      <button class="modal-btn danger" id="banUserBtn"><span class="fa-solid fa-user-lock"></span> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
    `;
  } else if (section === "buyers") {
    modalBody.innerHTML = `
      <button class="modal-btn" id="giveDaysBtn"><span class="fa-solid fa-plus"></span> –í—ã–¥–∞—Ç—å –¥–Ω–∏</button>
      <button class="modal-btn" id="removeDaysBtn"><span class="fa-solid fa-minus"></span> –£–±—Ä–∞—Ç—å –¥–Ω–∏</button>
      <button class="modal-btn" id="copyIdBtn"><span class="fa-solid fa-clone"></span> –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ID</button>
      <button class="modal-btn" id="resetHwidBtn"><span class="fa-solid fa-server"></span> –°–±—Ä–æ—Å–∏—Ç—å HWID</button>
      <button class="modal-btn danger" id="banUserBtn"><span class="fa-solid fa-user-lock"></span> –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
    `;
  } else if (section === "bans") {
    modalBody.innerHTML = `
      <button class="modal-btn" id="removeDaysBtn"><span class="fa-solid fa-minus"></span> –£–±—Ä–∞—Ç—å –¥–Ω–∏</button>
      <button class="modal-btn" id="copyIdBtn"><span class="fa-solid fa-clone"></span> –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ID</button>
      <button class="modal-btn" id="unbanUserBtn"><span class="fa-solid fa-unlock"></span> –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
      <button class="modal-btn danger" id="deleteUserBtn"><span class="fa-solid fa-database"></span> –£–¥–∞–ª–∏—Ç—å —Å –ë–î</button>
    `;
  }

  attachModalEvents();
}

// –ø–æ–¥–∫–ª—é—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∫ –∫–Ω–æ–ø–∫–∞–º
function attachModalEvents() {
  if (document.getElementById("giveDaysBtn")) {
    document.getElementById("giveDaysBtn").onclick = () => openGiveDaysFlow(selectedUserId);
  }
  if (document.getElementById("removeDaysBtn")) {
    document.getElementById("removeDaysBtn").onclick = () => openRemoveDaysFlow(selectedUserId);
  }
  if (document.getElementById("copyIdBtn")) {
    document.getElementById("copyIdBtn").onclick = () => copyUserId(selectedUserId);
  }
  if (document.getElementById("resetHwidBtn")) {
    document.getElementById("resetHwidBtn").onclick = () => resetUserHwid(selectedUserId);
  }
  if (document.getElementById("banUserBtn")) {
    document.getElementById("banUserBtn").onclick = () => openBanFlow(selectedUserId);
  }
  if (document.getElementById("unbanUserBtn")) {
    document.getElementById("unbanUserBtn").onclick = () => unbanUser(selectedUserId);
  }
  if (document.getElementById("deleteUserBtn")) {
    document.getElementById("deleteUserBtn").onclick = () => alert(`–£–¥–∞–ª–∏—Ç—å –∏–∑ –ë–î ID: ${selectedUserId}`);
  }
}

// –∫–ª–∏–∫ –ø–æ —à–µ—Å—Ç–µ—Ä—ë–Ω–∫–µ
document.addEventListener("click", (e) => {
  if (e.target.classList.contains("user-settings")) {
    selectedUserId = e.target.dataset.id;

    const activeTab = document.querySelector(".admin-tab.active");
    selectedSection = activeTab ? activeTab.dataset.tab : "users";

    modalTitle.textContent = `–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ID: ${selectedUserId}`;
    renderModalButtons(selectedSection);

    modal.style.display = "flex";
  }
});

// –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
document.querySelector(".modal .close").addEventListener("click", () => {
  modal.style.display = "none";
});
window.addEventListener("click", (e) => {
  if (e.target === modal) modal.style.display = "none";
});

function renderBuyersList(users) {
  let html = `<h3>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏:</h3>
    <div class="search-bar">
      <input type="text" id="searchInput" placeholder="–ü–æ–∏—Å–∫..."
        style="width:40%; padding:5px 8px; font-size:13px; border-radius:4px;
        border:1px solid #444; background:#2b2b2b; color:#fff; outline:none;">
    </div>
  `;

  let buyers = users.filter(u => {
    const buy1Left = getDaysLeft(u.buy1.start, u.buy1.days);
    const buy2Left = getDaysLeft(u.buy2.start, u.buy2.days);
    return buy1Left > 0 || buy2Left > 0;
  });

  if (buyers.length === 0) {
    return "<p>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π.</p>";
  }

  buyers.forEach((u, index) => {
    const buy1Left = getDaysLeft(u.buy1.start, u.buy1.days);
    const buy2Left = getDaysLeft(u.buy2.start, u.buy2.days);

    html += `
      <div class="user-card">
        <div class="user-header">
          ${index + 1} - @${u.login || "–Ω–µ—Ç"}
          <i class="fa-solid fa-cog user-settings" data-id="${u.id}" style="cursor:pointer;"></i>
        </div>
        <div class="user-info">
          <p><strong>ID:</strong> ${u.id}</p>
          <p><strong>–ö–ª—é—á:</strong> <span class="user-key">${u.key}</span>
             </p>
          <p><strong><span class="fa-solid fa-basket-shopping"></span> Police Helper:</strong> ${buy1Left} –¥–Ω–µ–π</p>
          <p>INFO: ${u.buy1.start || "-"} | ${u.buy1.issuedBy || "-"}</p>
          <p><strong><span class="fa-solid fa-basket-shopping"></span> Leader Helper:</strong> ${buy2Left} –¥–Ω–µ–π</p>
          <p>INFO: ${u.buy2.start || "-"} | ${u.buy2.issuedBy || "-"}</p>
          
          <p><strong>HWID:</strong> ${u.hwid || "-"}</p>
          
        </div>
      </div>
    `;
  });

  return html;
}

function renderBansList(users) {
  let html = `<h3>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</h3>
  <div class="search-bar">
      <input type="text" id="searchInput" placeholder="–ü–æ–∏—Å–∫..."
        style="width:40%; padding:5px 8px; font-size:13px; border-radius:4px;
        border:1px solid #444; background:#2b2b2b; color:#fff; outline:none;">
    </div>`;

  const banned = users.filter(u => u.ban && u.ban.status === true);

  if (banned.length === 0) {
    return "<h3>–ù–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</h3>";
  }

  banned.forEach(u => {
    let banDuration = "‚Äî";

    if (u.ban.until === null) {
      banDuration = "–Ω–∞–≤—Å–µ–≥–¥–∞";
    } else if (!isNaN(u.ban.until)) {
      const endDate = new Date(Number(u.ban.until));
      const today = new Date();
      const diff = Math.ceil((endDate - today) / (1000 * 60 * 60 * 24));
      banDuration = diff > 0 ? `${diff} –¥–Ω` : "—Å—Ä–æ–∫ –∏—Å—Ç—ë–∫";
    }

    let bannedBy = u.ban.by?.nickname 
    ? u.ban.by.nickname 
    : (u.ban.by?.login ? `@${u.ban.by.login}` : "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");

    html += `
      <div class="user-card" style="border-left: 4px solid #d9534f;">
      <i class="fa-solid fa-cog user-settings" data-id="${u.id}" style="float:right; cursor:pointer;"></i>
        <div class="user-header" style="color:#ff5555;">
           @${u.username || u.login || "–Ω–µ—Ç"}
        </div>
        <div class="user-info">
          <p><strong>ID:</strong> ${u.id}</p>
          <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${u.ban.reason || "‚Äî"}</p>
          <p><strong>–°—Ä–æ–∫:</strong> ${banDuration}</p>
          <p><strong>–ó–∞–±–∞–Ω–∏–ª:</strong> ${bannedBy}</p>
        </div>
      </div>
    `;
  });

  return html;
}


function openGiveDaysFlow(userId) {
  modalBody.innerHTML = `
    <h4>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç:</h4>
    <button class="modal-btn" id="product1Btn">üì¶ Police Helper</button>
    <button class="modal-btn" id="product2Btn">üì¶ Leader Helper</button>
    <button class="modal-btn danger" id="cancelFlow">‚ùå –û—Ç–º–µ–Ω–∞</button>
  `;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞
  document.getElementById("product1Btn").onclick = () => askDays(userId, "buy1", "Police Helper");
  document.getElementById("product2Btn").onclick = () => askDays(userId, "buy2", "Leader Helper");
  document.getElementById("cancelFlow").onclick = () => renderModalButtons(selectedSection);
}

function askDays(userId, productKey, productName) {
  modalBody.innerHTML = `
    <h4>–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è ${productName}:</h4>
    <div class="promo-input" style="display:flex; align-items:center; justify-content:space-between; gap:10px;">
      <input type="number" id="daysInput" placeholder="–ö–æ–ª-–≤–æ –¥–Ω–µ–π" style="flex:1; padding:6px; border-radius:6px; border:none;">
      <span class="promo-icon confirm" id="confirmDays" style="cursor:pointer;">‚úî</span>
      <span class="promo-icon cancel" id="cancelDays" style="cursor:pointer;">‚úñ</span>
    </div>
  `;

  document.getElementById("confirmDays").onclick = () => {
    const days = parseInt(document.getElementById("daysInput").value);
    if (isNaN(days) || days <= 0) {
      alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–Ω–µ–π");
      return;
    }

    const user = (window.allUsers || []).find(u => u.id == userId);
    if (user) {
      const daysLeft = getDaysLeft(user[productKey].start, user[productKey].days);
      const newTotal = daysLeft + days;

      user[productKey].days = newTotal;
      user[productKey].start = new Date().toISOString().split("T")[0];
      user[productKey].issuedBy = window.currentAdmin?.nickname || "unknown";

      alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.login || user.id} –≤—ã–¥–∞–Ω–æ +${days} –¥–Ω–µ–π (${productName}). –¢–µ–ø–µ—Ä—å ${newTotal} –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å. –í—ã–¥–∞–ª: ${user[productKey].issuedBy}`);
      addLog(`–í—ã–¥–∞–ª +${days} –¥–Ω–µ–π ${productName} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.login} | ${user.id}`);

      saveUsersToBin(window.allUsers);
    }

  document.getElementById("cancelDays").onclick = () => renderModalButtons(selectedSection);
}}

async function saveUsersToBin(users) {
  try {
    const res = await fetch("https://api.jsonbin.io/v3/b/68a9a92043b1c97be9266774", {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        "X-Master-Key": API_KEY // —É–±–µ—Ä–∏ –µ—Å–ª–∏ bin –ø—É–±–ª–∏—á–Ω—ã–π
      },
      body: JSON.stringify({ users }) // –≤ JSONBin –¥–∞–Ω–Ω—ã–µ –æ–±—ë—Ä–Ω—É—Ç—ã –≤ record
    });

    if (!res.ok) {
      throw new Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: " + res.status);
    }

    const data = await res.json();
    console.log("‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:", data);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", err);
  }
}

function openRemoveDaysFlow(userId) {
  modalBody.innerHTML = `
    <h4>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç:</h4>
    <button class="modal-btn" id="product1Btn">üì¶ Police Helper</button>
    <button class="modal-btn" id="product2Btn">üì¶ Leader Helper</button>
    <button class="modal-btn danger" id="cancelFlow">‚ùå –û—Ç–º–µ–Ω–∞</button>
  `;

  document.getElementById("product1Btn").onclick = () => askRemoveDays(userId, "buy1", "Police Helper");
  document.getElementById("product2Btn").onclick = () => askRemoveDays(userId, "buy2", "Leader Helper");
  document.getElementById("cancelFlow").onclick = () => renderModalButtons(selectedSection);
}

function askRemoveDays(userId, productKey, productName) {
  modalBody.innerHTML = `
    <h4>–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —É–±—Ä–∞—Ç—å —É ${productName}:</h4>
    <div class="promo-input" style="display:flex; align-items:center; justify-content:space-between; gap:10px;">
      <input type="number" id="daysInput" placeholder="–ö–æ–ª-–≤–æ –¥–Ω–µ–π" style="flex:1; padding:6px; border-radius:6px; border:none;">
      <span class="promo-icon confirm" id="confirmDays" style="cursor:pointer;">‚úî</span>
      <span class="promo-icon cancel" id="cancelDays" style="cursor:pointer;">‚úñ</span>
    </div>
  `;

  document.getElementById("confirmDays").onclick = () => {
    const days = parseInt(document.getElementById("daysInput").value);
    if (isNaN(days) || days <= 0) {
      alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–Ω–µ–π");
      return;
    }

    const user = (window.allUsers || []).find(u => u.id == userId);
    if (user) {
      // —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
      const daysLeft = getDaysLeft(user[productKey].start, user[productKey].days);

      // –Ω–æ–≤—ã–µ –¥–Ω–∏ = –æ—Å—Ç–∞—Ç–æ–∫ - —É–±–∏—Ä–∞–µ–º–æ–µ
      let newTotal = daysLeft - days;
      if (newTotal < 0) newTotal = 0;

      // –æ–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç
      user[productKey].days = newTotal;
      user[productKey].start = new Date().toISOString().split("T")[0];
      user[productKey].issuedBy = window.currentAdmin?.nickname || "unknown";

      alert(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.login || user.id} —É–±—Ä–∞–Ω–æ ${days} –¥–Ω–µ–π (${productName}). –¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª–æ—Å—å ${newTotal} –¥–Ω–µ–π.`);
      addLog(`–£–±—Ä–∞–ª ${days} –¥–Ω–µ–π ${productName} —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.login} | ${user.id}`);

      saveUsersToBin(window.allUsers);
    }
    modal.style.display = "none";
  };

  document.getElementById("cancelDays").onclick = () => renderModalButtons(selectedSection);
}

function copyUserId(userId) {
  navigator.clipboard.writeText(userId.toString())
    .then(() => {
      // –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      alert(`ID ${userId} —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ ‚úÖ`);
    })
    .catch(err => {
      console.error("–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ID:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å ID ‚ùå");
    });
}

function resetUserHwid(userId) {
  const user = (window.allUsers || []).find(u => u.id == userId);
  if (!user) {
    alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå");
    return;
  }

  // –æ–±–Ω—É–ª—è–µ–º HWID
  user.hwid = null;

  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
  saveUsersToBin(window.allUsers);

  alert(`HWID —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.login || user.id} —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω ‚úÖ`);
  addLog(`–°–±—Ä–æ—Å–∏–ª HWID —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.login} | ${user.id}`);
}

function openBanFlow(userId) {
  modalBody.innerHTML = `
    <h4>–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –Ω–∞–∫–∞–∑–∞–Ω–∏—è (–≤ –¥–Ω—è—Ö, -1 = –Ω–∞–≤—Å–µ–≥–¥–∞):</h4>
    <div class="promo-input" style="display:flex; gap:10px;">
      <input type="number" id="banDaysInput" placeholder="–ö–æ–ª-–≤–æ –¥–Ω–µ–π" style="flex:1; padding:6px; border-radius:6px; border:none;">
      <span class="promo-icon confirm" id="confirmBanDays" style="cursor:pointer;">‚úî</span>
      <span class="promo-icon cancel" id="cancelBanDays" style="cursor:pointer;">‚úñ</span>
    </div>
  `;

  document.getElementById("confirmBanDays").onclick = () => {
    const days = parseInt(document.getElementById("banDaysInput").value);
    if (isNaN(days)) {
      alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ä–æ–∫ (-1 = –Ω–∞–≤—Å–µ–≥–¥–∞)");
      return;
    }
    askBanReason(userId, days);
  };

  document.getElementById("cancelBanDays").onclick = () => renderModalButtons(selectedSection);
}

function askBanReason(userId, days) {
  modalBody.innerHTML = `
    <h4>–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:</h4>
    <div class="promo-input" style="display:flex; gap:10px;">
      <input type="text" id="banReasonInput" placeholder="–ü—Ä–∏—á–∏–Ω–∞" style="flex:1; padding:6px; border-radius:6px; border:none;">
      <span class="promo-icon confirm" id="confirmBanReason" style="cursor:pointer;">‚úî</span>
      <span class="promo-icon cancel" id="cancelBanReason" style="cursor:pointer;">‚úñ</span>
    </div>
  `;

  document.getElementById("confirmBanReason").onclick = () => {
    const reason = document.getElementById("banReasonInput").value.trim();
    if (!reason) {
      alert("–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏");
      return;
    }
    confirmBan(userId, days, reason);
  };

  document.getElementById("cancelBanReason").onclick = () => renderModalButtons(selectedSection);
}

function confirmBan(userId, days, reason) {
  modalBody.innerHTML = `
    <h4>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</h4>
    <p><strong>ID:</strong> ${userId}</p>
    <p><strong>–°—Ä–æ–∫:</strong> ${days === -1 ? "–Ω–∞–≤—Å–µ–≥–¥–∞" : days + " –¥–Ω."}</p>
    <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${reason}</p>
    <button class="modal-btn danger" id="applyBanBtn">üö´ –í—ã–¥–∞—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ</button>
    <button class="modal-btn" id="cancelFinalBan">‚ùå –û—Ç–º–µ–Ω–∞</button>
  `;

  document.getElementById("applyBanBtn").onclick = () => {
    const user = (window.allUsers || []).find(u => u.id == userId);
    if (!user) {
      alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå");
      return;
    }

    // —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è
    let until = null;
    if (days > 0) {
      const endDate = new Date();
      endDate.setDate(endDate.getDate() + days);
      until = endDate.getTime();
    }

    user.ban = {
      status: true,
      reason: reason,
      until: until, // null = –Ω–∞–≤—Å–µ–≥–¥–∞
      by: {
        id: window.currentAdmin?.id || 0,
        nickname: window.currentAdmin?.nickname || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥–º–∏–Ω"
      }
    };

    saveUsersToBin(window.allUsers);

    alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.login || user.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω (${days === 0 ? "–Ω–∞–≤—Å–µ–≥–¥–∞" : days + " –¥–Ω."}).`);
    addLog(`–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.login} | ${user.id} –Ω–∞ ${days === -1 ? "–Ω–∞–≤—Å–µ–≥–¥–∞" : days + " –¥–Ω."}. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`);

    modal.style.display = "none";
  };

  document.getElementById("cancelFinalBan").onclick = () => renderModalButtons(selectedSection);
}

function unbanUser(userId) {
  const user = (window.allUsers || []).find(u => u.id == userId);
  if (!user) {
    alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚ùå");
    return;
  }

  // –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
  if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å ${user.login || user.id}?`)) {
    return;
  }

  // –≤–∞—Ä–∏–∞–Ω—Ç 1: –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ–º ban
  delete user.ban;

  // –≤–∞—Ä–∏–∞–Ω—Ç 2: –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç, –Ω–æ —Å–Ω—è—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É:
  // user.ban = { status: false };

  saveUsersToBin(window.allUsers);

  alert(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.login || user.id} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
  addLog(`–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.login} | ${user.id}`);
  modal.style.display = "none";
}

function addLog(action) {
  const now = new Date();
  const time = now.toLocaleString("ru-RU", { hour12: false });

  const logEntry = {
    time,
    admin: window.currentAdmin?.nickname || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥–º–∏–Ω",
    action
  };

  if (!window.allLogs) window.allLogs = [];
  window.allLogs.unshift(logEntry); // –Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É

  saveLogsToBin(window.allLogs);
}
async function loadLogsFromBin() {
  try {
    const res = await fetch("https://api.jsonbin.io/v3/b/68821839ae596e708fbafe08/latest", {
      method: "GET",
      headers: { "X-Master-Key": API_KEY }
    });

    if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: " + res.status);

    const data = await res.json();
    console.log("–û—Ç–≤–µ—Ç JSONBin:", data);

    window.allLogs = data.record.logs || []; // ‚¨Ö –¥–æ—Å—Ç–∞–µ–º –∏–∑ –æ–±—ä–µ–∫—Ç–∞
    return window.allLogs;
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ–≤:", err);
    return [];
  }
}

async function saveLogsToBin(logs) {
  try {
    const res = await fetch(`https://api.jsonbin.io/v3/b/68821839ae596e708fbafe08`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        "X-Master-Key": API_KEY
      },
      body: JSON.stringify({ logs }) // ‚¨Ö –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ –æ–±—ä–µ–∫—Ç
    });

    if (!res.ok) {
      throw new Error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: " + res.status);
    }

    const data = await res.json();
    console.log("‚úÖ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:", data);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–æ–≤:", err);
  }
}

function renderLogs(logs) {
  if (!Array.isArray(logs) || logs.length === 0) {
    return "<h3>–õ–æ–≥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.</h3>";
  }

  let html = `<h3>–ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π:</h3>
    <div class="search-bar">
      <input type="text" id="searchInput" placeholder="–ü–æ–∏—Å–∫..." 
        style="width:40%; padding:5px 8px; font-size:13px; border-radius:4px; 
        border:1px solid #444; background:#2b2b2b; color:#fff; outline:none;">
    </div>
  `;

  logs.forEach(log => {
    html += `
      <div class="user-card" style="border-left:4px solid #2196f3;">
        <div class="user-header" style="color:#4cafef;">${log.admin}</div>
        <div class="user-info">
          <p><strong>–í—Ä–µ–º—è:</strong> ${log.time}</p>
          <p><strong>–î–µ–π—Å—Ç–≤–∏–µ:</strong> ${log.action}</p>
        </div>
      </div>
    `;
  });
  return html;
}